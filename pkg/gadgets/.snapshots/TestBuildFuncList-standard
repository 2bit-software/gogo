([]gadgets.function) (len=25) {
  (gadgets.function) {
    Name: (string) (len=16) "AdvancedFunction",
    Comment: (string) "",
    Description: (string) (len=17) "set a description",
    Example: (string) (len=7) "example",
    Arguments: ([]gadgets.argument) (len=3) {
      (gadgets.argument) {
        Name: (string) (len=4) "name",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) (len=16) "this is the name",
        Help: (string) "",
        Default: (string) (len=13) "default-value",
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      },
      (gadgets.argument) {
        Name: (string) (len=7) "include",
        Type: (string) (len=4) "bool",
        Long: (string) (len=12) "includeValue",
        Short: (uint8) 0,
        Description: (string) (len=24) "this is the include bool",
        Help: (string) "",
        Default: (string) (len=4) "true",
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      },
      (gadgets.argument) {
        Name: (string) (len=5) "value",
        Type: (string) (len=3) "int",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) (len=17) "this is the value",
        Help: (string) "",
        Default: (string) (len=1) "3",
        AllowedValues: ([]interface {}) (len=3) {
          (string) (len=1) "8",
          (string) (len=1) "9",
          (string) (len=2) "10"
        },
        RestrictedValues: ([]interface {}) (len=3) {
          (string) (len=1) "1",
          (string) (len=1) "2",
          (string) (len=1) "3"
        }
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=23) "ThreeArgFuncWithContext",
    Comment: (string) "",
    Description: (string) (len=82) "this function tests a function with three arguments, and only one required element",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=3) {
      (gadgets.argument) {
        Name: (string) (len=4) "name",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      },
      (gadgets.argument) {
        Name: (string) (len=7) "include",
        Type: (string) (len=4) "bool",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      },
      (gadgets.argument) {
        Name: (string) (len=5) "value",
        Type: (string) (len=3) "int",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=20) "NoArgumentsNoReturns",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) <nil>,
    UseGoGoCtx: (bool) false,
    GoGoCtxVariableName: (string) "",
    ErrorReturn: (bool) false
  },
  (gadgets.function) {
    Name: (string) (len=15) "DescriptionOnly",
    Comment: (string) (len=155) "DescriptionOnly This is the description for the function. Without any other arguments to the ctx,\nthis will show up in the list view and the --help output.",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) <nil>,
    UseGoGoCtx: (bool) false,
    GoGoCtxVariableName: (string) "",
    ErrorReturn: (bool) false
  },
  (gadgets.function) {
    Name: (string) (len=11) "ErrorReturn",
    Comment: (string) (len=56) "ErrorReturn requires no arguments, but returns an error.",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) <nil>,
    UseGoGoCtx: (bool) false,
    GoGoCtxVariableName: (string) "",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=14) "SingleArgument",
    Comment: (string) (len=39) "SingleArgument tests a single argument.",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=1) {
      (gadgets.argument) {
        Name: (string) (len=4) "arg1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) false,
    GoGoCtxVariableName: (string) "",
    ErrorReturn: (bool) false
  },
  (gadgets.function) {
    Name: (string) (len=28) "SingleArgumentAndErrorReturn",
    Comment: (string) (len=74) "SingleArgumentAndErrorReturn tests a single argument and returns an error.",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=1) {
      (gadgets.argument) {
        Name: (string) (len=4) "arg1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) false,
    GoGoCtxVariableName: (string) "",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=21) "TwoDifferentArguments",
    Comment: (string) (len=52) "TwoDifferentArguments tests two different arguments.",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=2) {
      (gadgets.argument) {
        Name: (string) (len=4) "arg1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      },
      (gadgets.argument) {
        Name: (string) (len=4) "arg2",
        Type: (string) (len=4) "bool",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) false,
    GoGoCtxVariableName: (string) "",
    ErrorReturn: (bool) false
  },
  (gadgets.function) {
    Name: (string) (len=35) "TwoDifferentArgumentsAndErrorReturn",
    Comment: (string) (len=87) "TwoDifferentArgumentsAndErrorReturn tests two different arguments and returns an error.",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=2) {
      (gadgets.argument) {
        Name: (string) (len=4) "arg1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      },
      (gadgets.argument) {
        Name: (string) (len=4) "arg2",
        Type: (string) (len=4) "bool",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) false,
    GoGoCtxVariableName: (string) "",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=18) "ContextWithNoUsage",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) <nil>,
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) false
  },
  (gadgets.function) {
    Name: (string) (len=20) "ShortDescriptionFunc",
    Comment: (string) "",
    Description: (string) (len=83) "this is a short description set specifically for the BasicShortDescription function",
    Example: (string) "",
    Arguments: ([]gadgets.argument) <nil>,
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=11) "ExampleFunc",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) (len=7) "example",
    Arguments: ([]gadgets.argument) <nil>,
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=16) "ArgumentNameFunc",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=1) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=6) "string",
        Long: (string) (len=11) "personsName",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=17) "ArgumentShortFunc",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=1) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 112,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=19) "ArgumentDefaultFunc",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=1) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (string) (len=13) "default-value",
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=20) "ArgumentOptionalFunc",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=1) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=16) "ArgumentHelpFunc",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=1) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) (len=9) "help text",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=25) "ArgumentAllowedValuesFunc",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=1) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=3) "int",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) (len=3) {
          (string) (len=1) "8",
          (string) (len=1) "9",
          (string) (len=2) "10"
        },
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=28) "ArgumentRestrictedValuesFunc",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=1) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=3) "int",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) (len=3) {
          (string) (len=1) "1",
          (string) (len=1) "2",
          (string) (len=1) "3"
        }
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=23) "ArgumentDescriptionFunc",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=1) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) (len=29) "this is the var 1 description",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=21) "BasicShortDescription",
    Comment: (string) (len=103) "BasicShortDescription is a function that uses the ShortDescription method to set the short description.",
    Description: (string) (len=83) "this is a short description set specifically for the BasicShortDescription function",
    Example: (string) "",
    Arguments: ([]gadgets.argument) <nil>,
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=13) "BasicArgument",
    Comment: (string) (len=131) "BasicArgument is the builder argument that signifies the following methods\nare chained to the argument. By itself, it does nothing.",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=2) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      },
      (gadgets.argument) {
        Name: (string) (len=4) "var2",
        Type: (string) (len=4) "bool",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=24) "BasicDescriptionArgument",
    Comment: (string) (len=107) "BasicDescriptionArgument sets the description of the argument. This will show up in\n--help of the function.",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=2) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) (len=32) "describe what this argument does",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      },
      (gadgets.argument) {
        Name: (string) (len=4) "var2",
        Type: (string) (len=4) "bool",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=15) "BasicCtxChained",
    Comment: (string) "",
    Description: (string) (len=60) "set a description, this can use any go code to set the value",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=2) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      },
      (gadgets.argument) {
        Name: (string) (len=4) "var2",
        Type: (string) (len=4) "bool",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  },
  (gadgets.function) {
    Name: (string) (len=20) "BasicArgumentChained",
    Comment: (string) "",
    Description: (string) "",
    Example: (string) "",
    Arguments: ([]gadgets.argument) (len=2) {
      (gadgets.argument) {
        Name: (string) (len=4) "var1",
        Type: (string) (len=6) "string",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) (len=32) "describe what this argument does",
        Help: (string) "",
        Default: (string) (len=1) "1",
        AllowedValues: ([]interface {}) (len=3) {
          (string) (len=1) "1",
          (string) (len=1) "2",
          (string) (len=1) "3"
        },
        RestrictedValues: ([]interface {}) (len=3) {
          (string) (len=1) "4",
          (string) (len=1) "5",
          (string) (len=1) "6"
        }
      },
      (gadgets.argument) {
        Name: (string) (len=4) "var2",
        Type: (string) (len=4) "bool",
        Long: (string) "",
        Short: (uint8) 0,
        Description: (string) "",
        Help: (string) "",
        Default: (interface {}) <nil>,
        AllowedValues: ([]interface {}) <nil>,
        RestrictedValues: ([]interface {}) <nil>
      }
    },
    UseGoGoCtx: (bool) true,
    GoGoCtxVariableName: (string) (len=3) "ctx",
    ErrorReturn: (bool) true
  }
}
