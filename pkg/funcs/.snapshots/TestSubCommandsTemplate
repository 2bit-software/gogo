//go:build gogo

/*
This file is generated by GoGo. Do not edit.
.............................................@%=====@@..............................................
..........................................@============#@...........................................
........................................@======*====%=====@.........................................
......................................@=======@======+======@.......................................
.....................................-========%-=====@=======@......................................
.....................................@=======@========@======#......................................
.....................................+=====%*==========@======+.....................................
....................................@=======+%@@@@@@%*========@.....................................
....................................+=#@%-:::::::::::::::*@@===:....................................
...................................@+:::::::::::::::::::::::::@@....................................
..................................-:::::::::-+*#####+-::::::::::#...................................
..................................@%@@*====================#@@*:+...................................
................................@================================%=.................................
...............................%===================================@................................
................@@...........@======================================*:..............................
................=@@@@@%-....@#@@@@@@%**********@----%******+*#%@@@#+==-.........%@@.................
.................@@@@@@@@@@@@@@@@@-@********@@*=----@*#+*******@-@@@@@@@@@@@@@@@@@@.................
.................%%@@@@@@@@@@@@@@@--@*********@-----+#*********@-@@@@@@@@@@@@@@@@@..................
.................@@@@@@@@@@*=@@@@@---*@+#*+%@-%-------@*****#*@--@@@@%=%@@@@@@@@@@@.................
..................@@@@@@@@-----@@%-----------%-------@---+#+-----*@@-----@@@@@@@@@:.................
..................-@@@@@@@--@---%+--------@#-@---------@----------#--+%--@@@@@@@@@..................
....................@@@@@@--@*+-#----==------%-----------#@#------@-#=@--@@@@@@@*...................
....................=@@@@@*-@-@-@-----------*---------------------@-#-@-@@@@@@*.....................
.....................:@@@@@-%--%@-----------@---------------------@@-*+-@@@@@@@.....................
........................@@@@---%@-----------@---------------------@@---@@@@@@.......................
............................@---@-----------@---------------------@---@@@@..........................
..............................%@@-----------@---------------------@@#...............................
................................@-----------@---------------------@.................................
................................+-----------@---------------------@.................................
.................................-----------@---------%-----------#.................................
.................................#-----------@-------#-------------.................................
.................................@-----------+*------@-----------*..................................
.................................@-------------@*-=@*------------@..................................
..................................-------------------------------@..................................
..................................@------------------------------=..................................
.................................@@------@---------------@=-----%...................................
...............................#===@----@#@=------------@@@-----@=@.................................
.............................@@====@----%----=%@@@@@@#---------#===%................................
..........................@+=@======@--------------------------@====*#@:............................
........@:.....#*....+@@@===@======#:+--------=@#+#@+---------@*=====#===@...........+%%*...........
....#@=@........%-====%+====%======@.@-----------------------+:@======@====@+%@%*=%.......:+........
...@===@%.....=@=====@=====@=======+..@----------------------#.-=======@====@=====@........+==#*....
.**=*@=============+@======#======%....@--------------------@...@======#=====#+=====@@%%@@@+==-%*...
%=======+@@@@@@@%==+*=============@.....@------------------#....@=======@=====@@@==========+@@===%:.
===================@==============@......@---------------%:.....@==============@=====***==========-@
===================*==============@.......%%------------@.......@==============*====================
==================@===============@........*----------+@........@===============@===================
==================@=================........*----------@........@===============@===================
==================@================@........@----------@........#===============@===================
==================@================*:.......@@-------#@........@================%===================
===++==+==========%@@@@@@@@@@@======@......@.@#%@@@%%..@......@#================#=============*=====
===@==%=====================@========@....@..-%#####@...@...:@@======@==*%%%%#+=-==========#===@====
===@=-@===================@===========@%.::...@#####@....#.@.@=========@====================@==%====
===+=@=================+@=-============@.@.....@%###@....#..@==========-=@===================@==#===
==*==@==============+@+-================#+....@######@.....@===============+@+===============@==@===
*/

package main

import (
	"fmt"
	"os"
	"path/filepath"

	"github.com/2bit-software/gogo/pkg/funcs/gogo"
)

func main() {
	app := &gogo.App{
		Name:        filepath.Base(os.Args[0]),
		HelpName:    "gogo gadget",
		Usage:       "A short description",
		HideVersion: true,
		Flags: []gogo.Flag{
			&gogo.StringFlag{
				Name:    "config",
				Aliases: []string{"c"},
				Usage:   "config file (default is ./config.yaml)",
				EnvVars: []string{"CONFIG"},
			},
			&gogo.BoolFlag{
				Name:    "verbose",
				Aliases: []string{"v"},
				Usage:   "enable verbose mode",
				EnvVars: []string{"VERBOSE"},
			},
			&gogo.StringFlag{
				Name:    "config",
				Aliases: []string{"c"},
				Usage:   "config file (default is ./config.yaml)",
				EnvVars: []string{"CONFIG"},
			},
			&gogo.BoolFlag{
				Name:    "verbose",
				Aliases: []string{"v"},
				Usage:   "enable verbose mode",
				EnvVars: []string{"VERBOSE"},
			},
		},
		Before: func(c *gogo.CliContext) error {
			// Configuration file handling similar to initConfig()
			configFile := c.String("config")

			if configFile != "" {
				// Load specific config file
				// Note: We would need an equivalent to viper here
				// This is a placeholder for the config loading logic
			} else {
				// Load default config
				// Note: We would need an equivalent to viper here
				// This is a placeholder for the config loading logic
			}

			return nil
		},
		Commands: []*gogo.Command{},
		Action: func(c *gogo.CliContext) error {
			{
				type Options struct {
					Config  string `short:"c" long:"config" description:"config file (default is ./config.yaml)" order:"0"`
					Verbose bool   `short:"v" long:"verbose" description:"enable verbose mode" order:"1"`
				}
				args := c.Args().Slice()
				// detect help first
				if len(args) > 0 && (args[0] == "--help" || args[0] == "-h") {
					err := gogo.ShowHelp(c, "PrintHello")
					return err
				}

				// then parse options
				var opts Options
				positional, err := gogo.ParseArgs(&opts, args)
				if err != nil {
					return fmt.Errorf("error parsing arguments: %w", err)
				}
				if len(positional) > 0 {
					if err = gogo.HydrateFromPositional(&opts, positional); err != nil {
						return fmt.Errorf("error processing positional arguments: %w", err)
					}
				}
				// Validate required params and constraints
				PrintHello(opts.Config, opts.Verbose)
				return nil
			}
		},
	}
	// add the commands

	subCommandACmd := &gogo.Command{
		Name:            "SubCommandA",
		Usage:           "A short description for SubCmdA",
		HelpName:        "SubCommandA",
		Description:     "A much longer description for SubCmdA. Much wow!",
		SkipFlagParsing: true,
		HideHelpCommand: true,
		Flags: []gogo.Flag{
			&gogo.BoolFlag{
				Name:    "print",
				Aliases: []string{"p"},
				Usage:   "Print extra information on the result.",
				EnvVars: []string{"SUBCOMMANDA_PRINT"},
			},
			&gogo.StringFlag{
				Name:    "shout",
				Usage:   "Words to shout.",
				EnvVars: []string{"SUBCOMMANDA_SHOUT"},
			},
		},
		Action: func(c *gogo.CliContext) error {
			{
				type Options struct {
					Print bool   `short:"p" long:"print" description:"Print extra information on the result." order:"0"`
					Shout string `long:"shout" description:"Words to shout." order:"1"`
				}
				args := c.Args().Slice()
				// detect help first
				if len(args) > 0 && (args[0] == "--help" || args[0] == "-h") {
					err := gogo.ShowHelp(c, "SubCommandA")
					return err
				}

				// then parse options
				var opts Options
				positional, err := gogo.ParseArgs(&opts, args)
				if err != nil {
					return fmt.Errorf("error parsing arguments: %w", err)
				}
				if len(positional) > 0 {
					if err = gogo.HydrateFromPositional(&opts, positional); err != nil {
						return fmt.Errorf("error processing positional arguments: %w", err)
					}
				}
				// Validate required params and constraints
				SubCommandA(opts.Print, opts.Shout)
				return nil
			}
		},
	}
	app.Commands = append(app.Commands, subCommandACmd)

	// Run the app
	err := app.Run(os.Args)
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
}

// detectArgumentRequirements validates that all required arguments are provided
func detectArgumentRequirements(requiredArgs []string, argMap map[string]any) []string {
	var missing []string
	// if there are no required requiredArgs, just accept the input
	if len(requiredArgs) == 0 {
		return missing
	}
	for _, arg := range requiredArgs {
		if arg == "" {
			continue
		}
		if _, ok := argMap[arg]; !ok {
			missing = append(missing, arg)
		}
	}
	return missing
}

