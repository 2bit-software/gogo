//go:build gogo

/*
This file is generated by GoGo. Do not edit.
.............................................@%=====@@..............................................
..........................................@============#@...........................................
........................................@======*====%=====@.........................................
......................................@=======@======+======@.......................................
.....................................-========%-=====@=======@......................................
.....................................@=======@========@======#......................................
.....................................+=====%*==========@======+.....................................
....................................@=======+%@@@@@@%*========@.....................................
....................................+=#@%-:::::::::::::::*@@===:....................................
...................................@+:::::::::::::::::::::::::@@....................................
..................................-:::::::::-+*#####+-::::::::::#...................................
..................................@%@@*====================#@@*:+...................................
................................@================================%=.................................
...............................%===================================@................................
................@@...........@======================================*:..............................
................=@@@@@%-....@#@@@@@@%**********@----%******+*#%@@@#+==-.........%@@.................
.................@@@@@@@@@@@@@@@@@-@********@@*=----@*#+*******@-@@@@@@@@@@@@@@@@@@.................
.................%%@@@@@@@@@@@@@@@--@*********@-----+#*********@-@@@@@@@@@@@@@@@@@..................
.................@@@@@@@@@@*=@@@@@---*@+#*+%@-%-------@*****#*@--@@@@%=%@@@@@@@@@@@.................
..................@@@@@@@@-----@@%-----------%-------@---+#+-----*@@-----@@@@@@@@@:.................
..................-@@@@@@@--@---%+--------@#-@---------@----------#--+%--@@@@@@@@@..................
....................@@@@@@--@*+-#----==------%-----------#@#------@-#=@--@@@@@@@*...................
....................=@@@@@*-@-@-@-----------*---------------------@-#-@-@@@@@@*.....................
.....................:@@@@@-%--%@-----------@---------------------@@-*+-@@@@@@@.....................
........................@@@@---%@-----------@---------------------@@---@@@@@@.......................
............................@---@-----------@---------------------@---@@@@..........................
..............................%@@-----------@---------------------@@#...............................
................................@-----------@---------------------@.................................
................................+-----------@---------------------@.................................
.................................-----------@---------%-----------#.................................
.................................#-----------@-------#-------------.................................
.................................@-----------+*------@-----------*..................................
.................................@-------------@*-=@*------------@..................................
..................................-------------------------------@..................................
..................................@------------------------------=..................................
.................................@@------@---------------@=-----%...................................
...............................#===@----@#@=------------@@@-----@=@.................................
.............................@@====@----%----=%@@@@@@#---------#===%................................
..........................@+=@======@--------------------------@====*#@:............................
........@:.....#*....+@@@===@======#:+--------=@#+#@+---------@*=====#===@...........+%%*...........
....#@=@........%-====%+====%======@.@-----------------------+:@======@====@+%@%*=%.......:+........
...@===@%.....=@=====@=====@=======+..@----------------------#.-=======@====@=====@........+==#*....
.**=*@=============+@======#======%....@--------------------@...@======#=====#+=====@@%%@@@+==-%*...
%=======+@@@@@@@%==+*=============@.....@------------------#....@=======@=====@@@==========+@@===%:.
===================@==============@......@---------------%:.....@==============@=====***==========-@
===================*==============@.......%%------------@.......@==============*====================
==================@===============@........*----------+@........@===============@===================
==================@=================........*----------@........@===============@===================
==================@================@........@----------@........#===============@===================
==================@================*:.......@@-------#@........@================%===================
===++==+==========%@@@@@@@@@@@======@......@.@#%@@@%%..@......@#================#=============*=====
===@==%=====================@========@....@..-%#####@...@...:@@======@==*%%%%#+=-==========#===@====
===@=-@===================@===========@%.::...@#####@....#.@.@=========@====================@==%====
===+=@=================+@=-============@.@.....@%###@....#..@==========-=@===================@==#===
==*==@==============+@+-================#+....@######@.....@===============+@+===============@==@===
*/

package main

import (
	"errors"
	"fmt"
	"os"

	"github.com/spf13/cobra"
	"github.com/spf13/viper"
)

func main() {
	err := rootCmd.Execute()
	if err != nil {
		os.Exit(1)
	}
}

func init() {
	cobra.OnInitialize(initConfig)
	viper.AutomaticEnv()
	// root command flags
	rootCmd.PersistentFlags().StringP("config", "c", "", "config file (default is ./config.yaml)")
	_ = viper.BindPFlag("config", rootCmd.PersistentFlags().Lookup("config"))
	rootCmd.PersistentFlags().BoolP("verbose", "v", false, "enable verbose mode")
	_ = viper.BindPFlag("verbose", rootCmd.PersistentFlags().Lookup("verbose"))

	// attach subcommands
	rootCmd.AddCommand(subCmdCmd)

	// init the subcommands
	initSubCmdFlags()

}

func initConfig() {
	configFile := rootCmd.PersistentFlags().Lookup("config").Value.String()

	if configFile != "" {
		viper.SetConfigFile(configFile)
	} else {
		viper.SetConfigName("config")
		viper.SetConfigType("yaml")
		viper.AddConfigPath(".")
	}

	viper.AutomaticEnv()

	if err := viper.ReadInConfig(); err != nil {
		var configFileNotFoundError viper.ConfigFileNotFoundError
		if !errors.As(err, &configFileNotFoundError) {
			fmt.Printf("Error reading config file: %s", err)
			os.Exit(1)
		}
	}
}

var rootCmd = &cobra.Command{
	Use:   "rootFlag",
	Short: "",
	Long:  "",
	Run: func(cmd *cobra.Command, args []string) {
		rootFlag()
	},
}

// subCmdCmd represents the subCmd command
var subCmdCmd = &cobra.Command{
	Use:   "subCmd [stringFlag] [flags]",
	Short: "",
	Long: "" +
		"\nArguments: " +
		"\n\tstringFlag: [string]  help text",
	Run: func(cmd *cobra.Command, args []string) {
		if len(args) > 0 && args[0] != "" {
			if args[0] == `""` {
				viper.Set("stringFlag", "")
			} else {
				viper.Set("stringFlag", args[0])
			}
		}
		argStringFlag := viper.GetString("stringFlag")

		ok := detectArgumentRequirements([]string{"stringFlag"})
		if !ok {
			fmt.Printf("Missing required arguments\n\n")
			_ = cmd.Help()
			os.Exit(1)
		}
		subCmd(argStringFlag)
	},
}

func initSubCmdFlags() {
	subCmdCmd.Flags().StringP("stringFlag", "s", "", "help text")
	_ = viper.BindPFlag("stringFlag", subCmdCmd.Flags().Lookup("stringFlag"))
	_ = viper.BindEnv("stringFlag", "SUBCMD_STRINGFLAG")
}

func detectArgumentRequirements(args []string) bool {
	// if there are no required args, just accept the input
	if len(args) == 0 {
		return true
	}
	for _, arg := range args {
		if arg == "" {
			continue
		}
		if !viper.IsSet(arg) {
			return false
		}
	}
	return true
}

