//go:build gogo

/*
This file is generated by GoGo. Do not edit.
.............................................@%=====@@..............................................
..........................................@============#@...........................................
........................................@======*====%=====@.........................................
......................................@=======@======+======@.......................................
.....................................-========%-=====@=======@......................................
.....................................@=======@========@======#......................................
.....................................+=====%*==========@======+.....................................
....................................@=======+%@@@@@@%*========@.....................................
....................................+=#@%-:::::::::::::::*@@===:....................................
...................................@+:::::::::::::::::::::::::@@....................................
..................................-:::::::::-+*#####+-::::::::::#...................................
..................................@%@@*====================#@@*:+...................................
................................@================================%=.................................
...............................%===================================@................................
................@@...........@======================================*:..............................
................=@@@@@%-....@#@@@@@@%**********@----%******+*#%@@@#+==-.........%@@.................
.................@@@@@@@@@@@@@@@@@-@********@@*=----@*#+*******@-@@@@@@@@@@@@@@@@@@.................
.................%%@@@@@@@@@@@@@@@--@*********@-----+#*********@-@@@@@@@@@@@@@@@@@..................
.................@@@@@@@@@@*=@@@@@---*@+#*+%@-%-------@*****#*@--@@@@%=%@@@@@@@@@@@.................
..................@@@@@@@@-----@@%-----------%-------@---+#+-----*@@-----@@@@@@@@@:.................
..................-@@@@@@@--@---%+--------@#-@---------@----------#--+%--@@@@@@@@@..................
....................@@@@@@--@*+-#----==------%-----------#@#------@-#=@--@@@@@@@*...................
....................=@@@@@*-@-@-@-----------*---------------------@-#-@-@@@@@@*.....................
.....................:@@@@@-%--%@-----------@---------------------@@-*+-@@@@@@@.....................
........................@@@@---%@-----------@---------------------@@---@@@@@@.......................
............................@---@-----------@---------------------@---@@@@..........................
..............................%@@-----------@---------------------@@#...............................
................................@-----------@---------------------@.................................
................................+-----------@---------------------@.................................
.................................-----------@---------%-----------#.................................
.................................#-----------@-------#-------------.................................
.................................@-----------+*------@-----------*..................................
.................................@-------------@*-=@*------------@..................................
..................................-------------------------------@..................................
..................................@------------------------------=..................................
.................................@@------@---------------@=-----%...................................
...............................#===@----@#@=------------@@@-----@=@.................................
.............................@@====@----%----=%@@@@@@#---------#===%................................
..........................@+=@======@--------------------------@====*#@:............................
........@:.....#*....+@@@===@======#:+--------=@#+#@+---------@*=====#===@...........+%%*...........
....#@=@........%-====%+====%======@.@-----------------------+:@======@====@+%@%*=%.......:+........
...@===@%.....=@=====@=====@=======+..@----------------------#.-=======@====@=====@........+==#*....
.**=*@=============+@======#======%....@--------------------@...@======#=====#+=====@@%%@@@+==-%*...
%=======+@@@@@@@%==+*=============@.....@------------------#....@=======@=====@@@==========+@@===%:.
===================@==============@......@---------------%:.....@==============@=====***==========-@
===================*==============@.......%%------------@.......@==============*====================
==================@===============@........*----------+@........@===============@===================
==================@=================........*----------@........@===============@===================
==================@================@........@----------@........#===============@===================
==================@================*:.......@@-------#@........@================%===================
===++==+==========%@@@@@@@@@@@======@......@.@#%@@@%%..@......@#================#=============*=====
===@==%=====================@========@....@..-%#####@...@...:@@======@==*%%%%#+=-==========#===@====
===@=-@===================@===========@%.::...@#####@....#.@.@=========@====================@==%====
===+=@=================+@=-============@.@.....@%###@....#..@==========-=@===================@==#===
==*==@==============+@+-================#+....@######@.....@===============+@+===============@==@===
*/

package main

import (
	"errors"
	"fmt"
	"os"

	"github.com/spf13/cobra"
	"github.com/spf13/viper"
)

func main() {
	err := rootCmd.Execute()
	if err != nil {
		os.Exit(1)
	}
}

func init() {
	cobra.OnInitialize(initConfig)
	// root command flags
	// TODO: this should be opt-in based on configuration during building
	rootCmd.PersistentFlags().StringP("config", "c", "", "config file (default is ./config.yaml)")
	_ = viper.BindPFlag("config", rootCmd.PersistentFlags().Lookup("config"))
	rootCmd.PersistentFlags().BoolP("verbose", "v", false, "enable verbose mode")
	_ = viper.BindPFlag("verbose", rootCmd.PersistentFlags().Lookup("verbose"))
	rootCmd.Flags().StringP("stringFlag", "s", "default", "help text")
}

func initConfig() {
	configFile := rootCmd.PersistentFlags().Lookup("config").Value.String()

	if configFile != "" {
		viper.SetConfigFile(configFile)
	} else {
		viper.SetConfigName("config")
		viper.SetConfigType("yaml")
		viper.AddConfigPath(".")
	}

	viper.AutomaticEnv()

	if err := viper.ReadInConfig(); err != nil {
		var configFileNotFoundError viper.ConfigFileNotFoundError
		if !errors.As(err, &configFileNotFoundError) {
			fmt.Printf("Error reading config file: %s", err)
			os.Exit(1)
		}
	}
}

func toPtr[T any](v T) *T {
	return &v
}

var rootCmd = &cobra.Command{
	Use:   "rootFlag",
	Short: "",
	Long:  "",
	Run: func(cmd *cobra.Command, args []string) {
		if args[0] != "" {
			// if verbose is set, log what we're doing
			if viper.GetBool("verbose") {
				fmt.Printf("Setting stringFlag to: %v\n", args[0])
			}
			viper.Set("stringFlag", args[0])
		}
		argStringFlag := viper.GetString("stringFlag")
		rootFlag(argStringFlag)
	},
}

